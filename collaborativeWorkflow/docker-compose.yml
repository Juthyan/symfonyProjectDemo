version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    env_file:
      - .env
    environment:
      APP_ENV: 'prod'
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?serverVersion=16&charset=utf8"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .:/app:delegated
      - /app/var # Ã©vite les conflits avec les fichiers de cache Symfony
    networks:
      - app_network

  nginx:
    image: nginx:stable-alpine
    container_name: symfony_nginx
    ports:
      - "8080:80" # ðŸ’¡ plus standard pour Cloud Run et CI/CD
    volumes:
      - ./public:/app/public:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app_network

  database:
    image: postgres:16-alpine
    container_name: symfony_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

volumes:
  db-data:

networks:
  app_network:
    driver: bridge